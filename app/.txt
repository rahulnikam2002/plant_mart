import { Text } from "react-native";
import { View, Button } from "react-native";
// Context
import { AuthContext } from "../../context/auth/auth.context";
import { useCallback, useContext, useMemo, useRef, useState } from "react";
import { CustomBottomSheet } from "../../Components/BottomSheet/BottomSheet";
import { SCREEN_HEIGHT } from "@gorhom/bottom-sheet";

export const App = () => {
  const { logoutUser } = useContext(AuthContext);
  const [showBottomSheet, setShowBottomSheet] = useState(-1);

  const sheetRef = useRef(null);
  const snapPoints = useMemo(() => ["15%", "50%", "80%", "100%"], []);

  const handleSnapPress = useCallback((index) => {
    sheetRef.current?.snapToIndex(index);
  }, []);

  // callbacks
  const handleSheetChanges = useCallback((index) => {
    console.log(index);
    if (index == 0) {
      setShowBottomSheet(-1);
      sheetRef.current?.close();
    }
  }, []);
  return (
    <View style={{ height: SCREEN_HEIGHT, paddingTop: 50 }}>
      <Text>App</Text>
      <Button
        onPress={() => setShowBottomSheet(1)}
        title="Logout"
      />
      <View
        style={
          setShowBottomSheet && {
            position: "absolute",
            top: 0,
            right: 0,
            width: "100%",
            // height: "10%",
            backgroundColor: "red"
          }
        }>
        <CustomBottomSheet
          ref={sheetRef}
          snapPoints={snapPoints}
          handleSheetChanges={handleSheetChanges}
          index={showBottomSheet}
        >
          <Text>Hello World!</Text>
        </CustomBottomSheet>
      </View>
    </View>
  );
};








Sign in screen 
  ==onClick==> api call to check email is present or not
    present ? redirect user to password's screen
      else
        ==API==> for sending OTP on that email
          OTP sent ? redirect him to OTPs screen

OTP screen
  Enter otp and when user cliks on continue
  ==> send API call to verify user and create user
  Success ? change the stack from Auth to App




